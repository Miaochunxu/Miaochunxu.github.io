<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[greenplum迁移(VirtualBox)]]></title>
    <url>%2F2018%2F12%2F19%2Fgreenplum%E8%BF%81%E7%A7%BB-VirtualBox%2F</url>
    <content type="text"></content>
      <categories>
        <category>greenplum</category>
      </categories>
      <tags>
        <tag>migrate</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VirtualBox安装greenplum]]></title>
    <url>%2F2018%2F12%2F19%2FVirtualBox%E5%AE%89%E8%A3%85greenplum%2F</url>
    <content type="text"></content>
      <categories>
        <category>greenplum</category>
      </categories>
      <tags>
        <tag>VirtualBox</tag>
        <tag>greenplum</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[docker安装greenplum]]></title>
    <url>%2F2018%2F12%2F19%2Fdocker%E5%AE%89%E8%A3%85greenplum%2F</url>
    <content type="text"></content>
      <categories>
        <category>greenplum</category>
      </categories>
      <tags>
        <tag>greenplum安装</tag>
        <tag>docker</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[centos相关操作]]></title>
    <url>%2F2018%2F12%2F17%2F%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[系统相关查看系统版本centos1cat /etc/redhat-release SELinux安全增强型 Linux SELinux作用SELinux 限制服务进程对资源的访问 SELinux模式(强制/宽容/关闭)12345enforcing: 强制模式。违反 SELinux 规则的行为将被阻止并记录到日志中。permissive: 宽容模式。违反 SELinux 规则的行为只会记录到日志中。一般为调试用。disabled: 关闭 SELinux。 修改模式方法123$ vi /etc/selinux/config修改 SELINUX=enforcing 为相应的模式，重启服务器生效 安全机制(文件/进程)格式：system_u:object_r:net_conf_t:s0 &nbsp; 用户(User) 角色(Role) 类型(Type) 级别(Level) 文件相关 system_u: 系统创建的文件 unconfined_u: 用户创建的文件 object_r: 代表文件 需要文件和进程类型相同，才能访问 MLS安全等级 进程相关 system_u: 系统服务进程，受管制 unconfined_u: 不受管制的进程，通常为用户自己创建的进程 system_r: 系统服务进程，受管制 unconfined_r: 不受管制的进程，通常为用户自己创建的进程 需要文件和进程类型相同，才能访问 MLS安全等级 基本使用查看文件的安全上下文(SELinux进程权限)123456$ ls -Z [文件名]例：$ ls -Z /etc/hosts-rw-r--r--. root root system_u:object_r:net_conf_t:s0 hosts centos设置ssh密码登录root用户下修改 sshd_config 文件12$ su - // 切换root用户$ vi /etc/ssh/sshd_config 修改PasswordAuthentication1#PasswordAuthentication yes // 去掉前面的#，使之生效 重启sshd服务1$ systemctl restart sshd 文件相关修改文件所属用户和所属用户组123chown 修改所属用户chgrp 修改所属用户组chmod 修改权限 drwxrwxrwt | 10 root root 4096 Dec 19 11:34 tmp/]]></content>
      <categories>
        <category>服务器骚操作</category>
      </categories>
      <tags>
        <tag>centos</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[VirtualBox+vagrant]]></title>
    <url>%2F2018%2F12%2F14%2FVirtualBox-vagrant%2F</url>
    <content type="text"><![CDATA[使用vagrant管理与操作VirtualBox VirtualBox 与 vagrant 的安装为前提，官网下载安装包或者brew安装都可 基本命令123456vagrant initvagrant upvagrant haltvagrant destroyvagrant boxvagrant plugin vagrant-scp 安装拷贝宿主机文件到虚拟机内部，可以使用vagrant插件来实现scp 安装 1vagrant plugin install vagrant-scp 使用 1vagrant scp &lt;location_file_url&gt; [vm_name]:&lt;vm_url&gt;]]></content>
      <categories>
        <category>虚拟机</category>
      </categories>
      <tags>
        <tag>VirtualBox</tag>
        <tag>vagrant</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker那些坑的解决办法记录]]></title>
    <url>%2F2018%2F12%2F11%2FDocker%E9%82%A3%E4%BA%9B%E5%9D%91%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95%E8%AE%B0%E5%BD%95%2F</url>
    <content type="text"><![CDATA[docker下 centos 使用 systemctl 命令 解决办法加上 –privileged=true 和init(/usr/sbin/init)1docker run -d --name centos7 -p 8090:80 --privileged=true centos_nginx:1.0 /usr/sbin/init]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker-systemctl</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Markdown常用语法]]></title>
    <url>%2F2018%2F12%2F11%2FMarkdown%E5%B8%B8%E7%94%A8%E8%AF%AD%E6%B3%95%2F</url>
    <content type="text"><![CDATA[标题#数量 1～6 代表一级到6级标题 1# 这是一级标题 文字相关 强调 123*斜体***加粗*****加粗斜体*** 注：都不带空格 字号 123456&lt;small&gt;&lt;small&gt;小小号&lt;/small&gt;&lt;/small&gt;&lt;small&gt;小号&lt;/small&gt;正常&lt;big&gt;大号&lt;/big&gt;&lt;big&gt;&lt;big&gt;大大号&lt;/big&gt;&lt;/big&gt;&lt;big&gt;... 小小号小号正常 大号大大号 颜色 12&lt;font color=&quot;#d9534f&quot;&gt;d9534f&lt;/font&gt;&lt;font color=&quot;red&quot;&gt;red&lt;/font&gt; d9534f red 列表123*、-、+ 任意一个效果相同(无序)1 2 3 数字为有序列表 分隔符1*** 或 --- 中划线与下划线12~~中划线~~&lt;u&gt;下划线&lt;/u&gt; 行内元素1`这是行内元素` start 这是行内元素 end 表格1234姓名|性别|年龄|爱好:---:|:---:|:--:|:---: // 在其上方是表头 :==,:==:,==: 左对齐,居中,右对齐Steve|男|8|篮球Steven|女|20|足球 姓名 性别 年龄 爱好 Steve 男 8 篮球 Steven 女 20 足球 文字上下标注12上标&lt;sup&gt;上标&lt;/sup&gt;下标&lt;sub&gt;下标&lt;/sub&gt; 上标 上标 下标 下标 勾选12- [ ] 未勾选- [x] 勾选 注：x 是字母x 未勾选 勾选]]></content>
      <categories>
        <category>能上天的工具集</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[imageMagick图片处理]]></title>
    <url>%2F2018%2F12%2F11%2FimageMagick%E5%9B%BE%E7%89%87%E5%A4%84%E7%90%86%2F</url>
    <content type="text"><![CDATA[mac上安装 imageMagick通过brew方式 1$ brew install imagemagick 修改图片质量(大小)把a.jpg 缩小质量为 70 生成新的 b.jpg 1$ convert -quality 70 -strip a.jpg b.jpg -strip 为删除一些图片自带的配置信息，进一步减小图片大小 修改图片尺寸1、a.jpg 尺寸为 500x500 将a.jpg 修改成 100x100 的尺寸 1$ convert -resize 100x100 a.jpg b.jpg 2、强制转换图片尺寸：1$ convert -resize '100x100!' a.jpg b.jpg 3、图片尺寸判断：图片尺寸全部 大于/小于 设置的尺寸才会进行操作12$ convert -resize '100x100&gt;' a.jpg b.jpg$ convert -resize '100x100&lt;' a.jpg b.jpg 注：100x100 中的是字母 x 不是 * 图片添加水印(文本的方式)1、居中水印1convert -fill &apos;rgba(221, 34, 17, 0.25)&apos; -pointsize 36 -gravity center -draw &apos;text 0,0 &quot;miaochunxu.cn&quot;&apos; a.png b.png 2、倾斜平铺1convert -size 150x150 xc:none -fill &apos;#f5871f&apos; -pointsize 20 -gravity center -draw &apos;rotate -45 text 0,0 &quot;miaochunxu.cn&quot;&apos; -resize 60% miff:- | composite -tile -dissolve 20 - a.png b.png 原理为先用文本生成一个图片，然后把图片合并 -size: 图片尺寸 xc: 画布背景 none: 透明 -fill: 文本颜色 -pointsize: 文本大小 -gravity: 文本位置 center northwest north northEast west east southwest south southeast -draw: 绘图操作 rotate: 旋转角度 text: 绘制文本 0,0: 表示偏移角度 miaochunxu.cn: 文本内容 miff: 作为图像元素传递的中间件 -: 声明标准输出 |: 管道符 composite: 图片组合命令 -tile: 平铺 -dissolve: 平铺透明度 a.png: 原始图片 b.png: 生成水印图片名字]]></content>
      <categories>
        <category>能上天的工具集</category>
      </categories>
      <tags>
        <tag>imageMagick</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[github-cname-操作]]></title>
    <url>%2F2018%2F12%2F10%2Fgithub-cname-%E6%93%8D%E4%BD%9C%2F</url>
    <content type="text"><![CDATA[github(hexo &amp;&amp; next theme) 设置cname 假设 github 博客的访问地址是：https://a.github.io 域名是：a.comgithub 操作 1、创建CNAME文件，注：文件必须是全大写12$ touch CNAME$ vi CNAME 2、写入:1a.com 3、提交代码并设置https1setting =&gt; GitHub Pages 下的 Enforce HTTPS 强制使用https协议 域名解析提供商(阿里云) 操作1、添加解析记录 如下图 主机记录: 可以使用@ 或者 www，图中我使用了二级域名 blog 记录值: 你的github.io地址,确认即可 等待生效。]]></content>
      <categories>
        <category>Github呦呦</category>
      </categories>
      <tags>
        <tag>github-cname</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Docker入坑基本]]></title>
    <url>%2F2018%2F12%2F10%2FDocker%E5%85%A5%E5%9D%91%E5%9F%BA%E6%9C%AC%2F</url>
    <content type="text"><![CDATA[Docker build1docker build -t [image:version] . 说明，如果要上传到docker-hub, image名字最好带上用户名，比如docker build -t miaochunxu/centos_nginx:1.0 .方便docker push,其中的. 代表dockerfile就在当前目录 docker push提交到docker hub 1docker push miaochunxu/centos_nginx:1.0 如果build的时候没有带上用户名，则需要打tag 1docker tag centos_nginx:1.0 miaochuxnu/centos_nginx:1.0 然后再push]]></content>
      <categories>
        <category>Docker</category>
      </categories>
      <tags>
        <tag>docker基本操作</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[命令行]]></title>
    <url>%2F2018%2F12%2F10%2F%E5%91%BD%E4%BB%A4%E8%A1%8C%2F</url>
    <content type="text"></content>
      <categories>
        <category>服务器骚操作</category>
      </categories>
      <tags>
        <tag>bash</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[koa2入门使用]]></title>
    <url>%2F2018%2F12%2F10%2Fkoa2%E6%85%A2%E6%85%A2%E5%AD%A6%2F</url>
    <content type="text"></content>
      <categories>
        <category>后端那些事</category>
      </categories>
      <tags>
        <tag>nodejs</tag>
        <tag>koa2</tag>
        <tag>restful api</tag>
      </tags>
  </entry>
</search>
